[signals]
# Names given to signal samples
samples: t2tt_500_325, t2tt_650_325, t2tt_850_100
#samples: t2tt_500_325, t2tt_650_325, t2tt_850_100, t2tb_700_250_100, t2tb_700_400_100, t2tb_700_550_100, T6bbWW_425_400_50, t2bw_600_187p5_50, t2bw_600_325_50, t2bw_600_462p5_50, t2bw_700_250_100, t2bw_700_400_100, t2bw_700_550_100

[backgrounds]
# Names given to background samples
samples: ttbarplusw, znunu, ttZ

[control_regions]
# Names given to each control region for the uncertainties, and the corresponding samples to be used to estimate the yields in that CR
# Until we have data, the data yield will be based on MC (use the same filename for both dataFile and mcFile)
# files should be formated sampleName_crlabel
# Note that the variable names should be the same in the control region trees as in the signal region trees
# to use the baseline selection, leave 'selection' blank
# for external control regions to be applied with a transfer factor, the first argument should be ext
# for control regions to be fit simultaneously with the signal region, the first argument should be fit
# Multiple mcFiles can be provided, comma-separated, for multiple backgrounds
# crName: <ext/fit>; dataFile; mcFiles[; selection]
zfromgamma: ext; gjets_photoncr     ; gjets_photoncr     ; met>200 && njets>=5 && j1pt>75 && j2pt>75 && nlbjets>=2 && nbjets>=1 && dphij12met>1 && dphij3met>0.5 && mtcsv12met>175
lostlep:    fit; ttbarplusw_onelepcr; ttbarplusw_onelepcr; nvetolep>0 && absdphilepw<1 && met>200 && j1pt>75 && j2pt>75 && njets>=5 && nlbjets>=2 && nbjets>=1 && dphij12met>1 && dphij3met>0.5 && mtcsv12met>175

[bins]
# Specify the binning here, using the appropriate variable names (from your trees)
# The numbers designate the bin edges. A + after the last value means the last bin will include everything greater than the last value
# Thus njets: 0, 1+ will result in the bins {0 <= njets < 1, njets >= 1}
met:     200, 300, 400, 500, 600+
nbjets:  1, 2+
ncttstd: 0, 1+

# Also specify the binning for each set of control regions, both external and simultaneous
[lostlep_bins]
met:     200, 300, 400, 500, 600+
nbjets:  1+
ncttstd: 0, 1+

[zfromgamma_bins]
met:     200, 300, 400, 500, 600+
nbjets:  1+
ncttstd: 0, 1+

[config]
# Directory with root files. You must have one for each signal/background specified above! Plus one for data, if havedata is set to Yes
treelocation  = trees
# Default datacard outputs go under this directory
datacarddir   = datacards
# limit output stuff will go under this directory
limitdir      = limitRootFiles
# subdirectory to use under datacarddir and limitdir
subdir        = test
# Directory with configuration files (uncertainties, template datacard)
setuplocation = setup
# Name of your input TTrees
treename      = Events
# variable to project tree onto (for makeCutflowTables)
projvar       = met
# Name of your weight variable
weightname    = weight
# Luminosity to scale to (assumes default weights are scaled to 1 /fb)
lumiscale     = 4
# Suffix of input root files
filesuffix    = _tree.root
# Datacard template with dummy values to be replaced, to be found in setuplocation
template      = datacard.txt_template
# Do we have data?
havedata      = No
# Use dummy uncertainty values for signal/background
dummyuncertainties = No
# If overwriting datacard dir, first rename and save existing dir
saveoverwrites = Yes
# File with names and types of uncertainties to apply, to be found in setuplocation
uncertainty_definitions = define_0l_uncs.conf
# Files specifying uncertainty values by bin start with this string
uncertainty_fileprefix = values_0l_unc
# File speficiying mapping from control regions to signal region
crtosr_bin_map = define_0l_binmap.conf
# method to calculate limits (current options: Asymptotic HybridNew ProfileLikelihood)
limitmethod  = Asymptotic
# Baseline selection in terms of variables in input TTrees. Spaces are fine but don't put in quotes
basesel      = nvetolep==0 && nvetotau==0 && met>200 && j1pt>75 && j2pt>75 && njets>=5 && nlbjets>=2 && nbjets>=1 && dphij12met>1 && dphij3met>0.5 && mtcsv12met>175
